#!/usr/bin/python
from time import time
import helper
'''
Problem: Each new term in the Fibonacci sequence is generated by
adding the previous two terms. By starting with 1 and 2, the first
10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do
not exceed four million, find the sum of the even-valued terms.

Solution: Check each fib number to see if it's even.  If so, add to
the sum.  Do this in a loop while fib is less than 4,000,000

Test: Fibs <= 40 are 1, 2, 3, 5, 8, 13, 21, 34
Evens are just 2, 8, 34
So the sum would be 2 + 8 + 34 = 44
'''
total    = 2
maxnum   = 4000000

def getFib(x, y, maxnum, total):
	fib = x + y
	if fib <= maxnum:
		if fib % 2 == 0:
			total += fib
		fib = getFib(y, fib, maxnum, total)

		return fib
	else:
		return total

fib = getFib(1, 2, maxnum, total)

helper.result(4613732, fib)
