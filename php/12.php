<?php
/**
 * Problem: The sequence of triangle numbers is generated by adding
 * the natural numbers. So the 7th triangle number would be
 * 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 
 * Let us list the factors of the first seven triangle numbers:
 * 
 *  1: 1
 *  3: 1,3
 *  6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * 
 * We can see that 28 is the first triangle number to have over five divisors.
 * 
 * What is the value of the first triangle number to have over five hundred divisors?
 * 
 * Solution: Start by adding the number of natural numbers equal to the number of
 * factors we're looking for and work forward or backwards from there.
 */

function startTime()
{
	$mtime = microtime(); 
	$mtime = explode(" ",$mtime); 
	$mtime = $mtime[1] + $mtime[0]; 
	$starttime = $mtime;

	return $starttime;
}

function exTime($starttime)
{
	$mtime = microtime(); 
	$mtime = explode(" ",$mtime); 
	$mtime = $mtime[1] + $mtime[0]; 
	$endtime = $mtime; 
	$totaltime = ($endtime - $starttime); 

	return $totaltime; 
}

function triangleNum($x)
{
	$num = $x;
	for ($i=1; $i < $x; $i++) { 
		$num += $i;
	}

	return $num;
}

function factorCount($x)
{
	$factorCount = 0;
	for ($i=1; $i < (int) sqrt($x); $i++) { 
		if ($x % $i == 0) {
			$factorCount+=2;
		}
	}

	return $factorCount;
}

function eratosthenes_sieve(&$sieve, $n)
{
	$i = 2;
	$total = 0;

	while ($i <= $n) {
		if ($sieve[$i] == 0) {
			$total += $i;

			$j = $i;
			while ($j <= $n) {
				$sieve[$j] = 1;
				$j += $i;
			}
		}
		if ($i % floor($n / 100) == 0) {
			echo ".";
		}
		$i++;
	}

	echo "\n";

	return $total;
}

$start = startTime();

$numFactors = 500;

$sieve = array_fill(0, $numFactors, 0);
eratosthenes_sieve($sieve, $numFactors);

$incomplete = true;
$x = 1;
while ($incomplete) {
	$tri = triangleNum($x);
	$fact = factorCount($tri);
	echo $tri . " has " . $fact . " factors\n";
	if ($fact >= $numFactors) {
		$incomplete = false;
	}
	$x++;
}

echo exTime($start) . " seconds to execute.\n";
